import { Component, inject } from '@angular/core';import { CommonModule } from '@angular/common';import { Router } from '@angular/router';import { ReactiveFormsModule, FormBuilder, Validators } from '@angular/forms';import { AuthService } from '../../services/auth.service';@Component({  selector: 'app-register',  standalone: true,  imports: [CommonModule, ReactiveFormsModule],  templateUrl: './register.component.html',  styleUrls: ['./register.component.css']})export class RegisterComponent {  router = inject(Router);  fb = inject(FormBuilder);  authService = inject(AuthService);  registerForm = this.fb.group({    name: ['', Validators.required],    email: ['', [Validators.required, Validators.email]],    password: ['', [Validators.required, Validators.minLength(6)]],    confirmPassword: ['', Validators.required]  }, {    validators: this.passwordMatchValidator  });  errorMessage: string | null = null;  successMessage: string | null = null;  passwordMatchValidator(form: any) {    return form.get('password').value === form.get('confirmPassword').value      ? null : { 'mismatch': true };  }  onSubmit() {    this.errorMessage = null;    this.successMessage = null;    if (this.registerForm.valid) {      const { name, email, password } = this.registerForm.value;      if (name && email && password) {        this.authService.register(name, email, password).subscribe({          next: () => {            this.successMessage = 'Registration successful! You can now log in.';            this.registerForm.reset();            this.router.navigate(['/login']);          },          error: (err) => {            this.errorMessage = err.error?.message || 'Registration failed. Please try again.';          }        });      }    } else {      this.errorMessage = 'Please fill in all fields correctly.';    }  }  navigateTo(page: string) {    this.router.navigate([page]);  }}