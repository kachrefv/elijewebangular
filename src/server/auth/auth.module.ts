import { Module } from '@nestjs/common';import { AuthService } from './auth.service';import { AuthController } from './auth.controller';import { UserModule } from '../user/user.module';import { PassportModule } from '@nestjs/passport';import { JwtModule } from '@nestjs/jwt';import { JwtStrategy } from './jwt.strategy';import { ConfigModule, ConfigService } from '@nestjs/config';@Module({  imports: [    UserModule,    PassportModule,    JwtModule.registerAsync({      imports: [ConfigModule],      useFactory: async (configService: ConfigService) => ({        secret: configService.get<string>('JWT_SECRET'),        signOptions: { expiresIn: '1h' },      }),      inject: [ConfigService],    }),    ConfigModule.forRoot({      isGlobal: true, // Make ConfigModule global    }),  ],  providers: [AuthService, JwtStrategy],  controllers: [AuthController],  exports: [AuthService],})export class AuthModule {}