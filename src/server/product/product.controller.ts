import {  Controller,  Get,  Post,  Body,  Patch,  Param,  Delete,  UseGuards,  Request,} from '@nestjs/common';import { ProductService } from './product.service';import { CreateProductDto } from './dto/create-product.dto';import { UpdateProductDto } from './dto/update-product.dto';import { JwtAuthGuard } from '../auth/jwt-auth.guard';@UseGuards(JwtAuthGuard)@Controller('products')export class ProductController {  constructor(private readonly productService: ProductService) {}  @Post()  create(@Request() req, @Body() createProductDto: CreateProductDto) {    return this.productService.create({      ...createProductDto,      user: { connect: { id: req.user.userId } },    });  }  @Get()  findAll(@Request() req) {    return this.productService.findAll(req.user.userId);  }  @Get(':id')  findOne(@Request() req, @Param('id') id: string) {    return this.productService.findOne(id, req.user.userId);  }  @Patch(':id')  update(    @Request() req,    @Param('id') id: string,    @Body() updateProductDto: UpdateProductDto,  ) {    return this.productService.update(id, req.user.userId, updateProductDto);  }  @Delete(':id')  remove(@Request() req, @Param('id') id: string) {    return this.productService.remove(id, req.user.userId);  }}