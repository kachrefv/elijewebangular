import { Injectable } from '@nestjs/common';import { PrismaService } from '../prisma/prisma.service';import { Prisma, Product } from '@prisma/client';@Injectable()export class ProductService {  constructor(private prisma: PrismaService) {}  async create(data: Prisma.ProductCreateInput): Promise<Product> {    return this.prisma.product.create({ data });  }  async findAll(userId: string): Promise<Product[]> {    return this.prisma.product.findMany({ where: { userId } });  }  async findOne(id: string, userId: string): Promise<Product | null> {    return this.prisma.product.findUnique({ where: { id, userId } });  }  async update(    id: string,    userId: string,    data: Prisma.ProductUpdateInput,  ): Promise<Product> {    return this.prisma.product.update({ where: { id, userId }, data });  }  async remove(id: string, userId: string): Promise<Product> {    return this.prisma.product.delete({ where: { id, userId } });  }  async updateStock(productId: string, quantity: number): Promise<Product> {    return this.prisma.product.update({      where: { id: productId },      data: { stock: { decrement: quantity } },    });  }}